name: Deploy Lamda
 
env: 
 DEPLOY_FUNCTION_NAME: csye6225
 AWS_REGION: us-east-1
 CODEDEPLOY_APPLICATION_NAME: csye6225-lambda
 CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME: csye6225-lambda-deployment 
 ARTIFACT_NAME: csye6225-lambda.zip
 
on:
  workflow_dispatch:
 
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    
    - name: Build Deployment Artifact
      run: |
            echo 'inside_run'
            pwd
            ls
            mkdir serverless_artifact
            ls
            pwd
            zip -r ${{ env.ARTIFACT_NAME}} ./ 
            pwd
            ls -al
            mv ${{ env.ARTIFACT_NAME}} serverless_artifact/
            ls -al
            pwd
            cd serverless_artifact
            pwd
            ls -al
            cd ..
            pwd
            ls -al
      
 
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
 
    - name: Update Lambda Function
      run: |
          aws lambda get-alias --function-name ${{ env.DEPLOY_FUNCTION_NAME }} --name developmentAlias > output.json 
          DEVELOPMENT_ALIAS_VERSION=$(cat output.json | jq -r '.FunctionVersion')
          echo $DEVELOPMENT_ALIAS_VERSION
          aws lambda update-function-code --function-name ${{ env.DEPLOY_FUNCTION_NAME }} --zip-file fileb://bundle.zip --publish > output.json
          LATEST_VERSION=$(cat output.json | jq -r '.Version')
          echo $LATEST_VERSION
          cat > "appspec.yml" <<- EOM
          version: 0.0
          Resources:
          - myLambdaFunction:
          Type: AWS::Lambda::Function
          Properties:
          Name: "$DEPLOY_FUNCTION_NAME"
          Alias: "development"
          CurrentVersion: $DEVELOPMENT_ALIAS_VERSION
          TargetVersion: $LATEST_VERSION
          EOM
          cat appspec.yml 
 
    - name: Copy Artifact to S3
      run: |
          aws s3 cp appspec.yml s3://${{ secrets.S3_CODEDEPLOY_BUCKET }} 
 
    - name: Codedeploy API call
      run: |
          REVISION=revisionType=S3,s3Location={bucket=${{ secrets.S3_CODEDEPLOY_BUCKET }},key=appspec.yml,bundleType=YAML}
          output=$(aws deploy create-deployment \
          --application-name ${{ env.CODEDEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME}} \
          --deployment-config-name CodeDeployDefault.LambdaAllAtOnce \
          --revision $REVISION)
          echo $output
          deployment_id=$(echo $output | jq -r '.deploymentId')
          aws deploy wait deployment-successful --deployment-id $deployment_id
